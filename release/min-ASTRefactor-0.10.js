(function(){var e={},t=function(){!function(e){e.on=function(e,t){return this._ev||(this._ev={}),this._ev[e]||(this._ev[e]=[]),this._ev[e].push(t),this},e.removeListener=function(e,t){if(this._ev&&this._ev[e])for(var i=this._ev[e],s=0;s<i.length;s++)if(i[s]==t)return void i.splice(s,1)},e.trigger=function(e,t,i){if(this._ev&&this._ev[e]){return this._ev[e].forEach(function(e){e(t,i)}),this}}}(this),function(e){e.diff_nodes=function(e,t,i,s){try{if(i.failed)return!0;if(!e&&!t)return;if(e&&!t||!e&&t)return i.failed=!0,!0;var n=this.v_list;if(e instanceof Array&&t instanceof Array){for(var r,o=-1,f=0;f<t.length;f++){var a=t[f];if("ExpressionStatement"==a.type&&(a=a.expression),a&&"Literal"==a.type&&"...rest"==a.value){o=f,r=a;break}}var d=e.length;if(o>=0&&o>=d)return i.failed=!0,!0;for(var f=0;d>f;f++){var a=e[f],p=t[f],l=p;if(!l)return i.failed=!0,!0;if("ExpressionStatement"==l.type&&(l=l.expression),l&&"Literal"==l.type&&"...rest"==l.value){i.slots["...rest"]={srcArray:e,tplArray:t,tplNodeIndex:o,tplNode:r,array_name:s};break}this.diff_nodes(a,p,i)}return}if("Identifier"==t.type&&t.name&&t.name&&n.indexOf(t.name)>=0)return void("codeBlock"==t.name||(i.slots[t.name]=e));if(e.type!=t.type)return i.failed=!0,!0;if("Literal"==e.type&&e.value!=t.value)return i.failed=!0,!0;if("Identifier"==e.type&&e.name!=t.name)return i.failed=!0,!0;if("MemberExpression"==e.type){if(e.computed!=t.computed)return i.failed=!0,!0;this.diff_nodes(e.property,t.property,i),this.diff_nodes(e.object,t.object,i)}if("FunctionDeclaration"==e.type){if(e.generator!=t.generator)return i.failed=!0,!0;this.diff_nodes(e.params,t.params,i,"params"),this.diff_nodes(e.body,t.body,i,"params"),this.diff_nodes(e.id,t.id,i)}if("ArrowFunctionExpression"==e.type){if(e.generator!=t.generator)return i.failed=!0,!0;this.diff_nodes(e.params,t.params,i,"params"),this.diff_nodes(e.body,t.body,i,"body"),this.diff_nodes(e.id,t.id,i)}if("FunctionExpression"==e.type){if(e.generator!=t.generator)return i.failed=!0,!0;this.diff_nodes(e.params,t.params,i,"params"),this.diff_nodes(e.body,t.body,i,"body"),this.diff_nodes(e.id,t.id,i)}if("TryStatement"==e.type&&(this.diff_nodes(e.block,t.block,i,"block"),this.diff_nodes(e.handler,t.handler,i,"handler"),this.diff_nodes(e.finalizer,t.finalizer,i,"finalizer")),"CallExpression"==e.type&&(this.diff_nodes(e.callee,t.callee,i,"callee"),this.diff_nodes(e.arguments,t.arguments,i,"arguments")),"SequenceExpression"==e.type&&this.diff_nodes(e.expressions,t.expressions,i,"expressions"),"BlockStatement"==e.type&&this.diff_nodes(e.body,t.body,i,"body"),"VariableDeclaration"==e.type&&this.diff_nodes(e.declarations,t.declarations,i,"declarations"),"YieldExpression"==e.type&&this.diff_nodes(e.argument,t.argument,i,"argument"),"ReturnStatement"==e.type&&this.diff_nodes(e.argument,t.argument,i),"BreakStatement"==e.type&&this.diff_nodes(e.label,t.label,i),"MethodDefinition"==e.type&&(this.diff_nodes(e.key,t.key,i),this.diff_nodes(e.value,t.value,i)),"ClassDeclaration"==e.type&&(this.diff_nodes(e.id,t.id,i),this.diff_nodes(e.superClass,t.superClass,i),this.diff_nodes(e.body,t.body,i,"body")),"ClassBody"==e.type&&this.diff_nodes(e.body,t.body,i,"body"),"CatchClause"==e.type&&(this.diff_nodes(e.param,t.param,i,"param"),this.diff_nodes(e.body,t.body,i,"body")),"NewExpression"==e.type&&(this.diff_nodes(e.callee,t.callee,i),this.diff_nodes(e.arguments,t.arguments,i,"arguments")),"ConditionalExpression"==e.type&&(this.diff_nodes(e.test,t.test,i,"test"),this.diff_nodes(e.consequent,t.consequent,i),this.diff_nodes(e.alternate,t.alternate,i)),"DebuggerStatement"==e.type,"ThrowStatement"==e.type&&this.diff_nodes(e.argument,t.argument,i),"BlockStatement"==e.type&&this.diff_nodes(e.body,t.body,i,"body"),"LabeledStatement"==e.type&&(this.diff_nodes(e.label,t.label,i),this.diff_nodes(e.body,t.body,i,"body")),"LogicalExpression"==e.type){if(e.operator!=t.operator)return i.failed=!0,!0;this.diff_nodes(e.left,t.left,i),this.diff_nodes(e.right,t.right,i)}if("UnaryExpression"==e.type){if(e.operator!=t.operator)return i.failed=!0,!0;this.diff_nodes(e.argument,t.argument,i)}if("Program"==e.type&&this.diff_nodes(e.body,t.body,i,"body"),"UpdateExpression"==e.type){if(e.operator!=t.operator)return i.failed=!0,!0;this.diff_nodes(e.argument,t.argument,i)}if("Property"==e.type){if(e.shorthand!=t.shorthand)return i.failed=!0,!0;this.diff_nodes(e.key,t.key,i),this.diff_nodes(e.value,t.value,i)}if("ArrayPattern"==e.type&&this.diff_nodes(e.elements,t.elements,i,"elements"),"ArrayExpression"==e.type&&this.diff_nodes(e.elements,t.elements,i,"elements"),"ObjectPattern"==e.type&&this.diff_nodes(e.properties,t.properties,i,"properties"),"ObjectExpression"==e.type&&this.diff_nodes(e.properties,t.properties,i,"properties"),"RestElement"==e.type&&this.diff_nodes(e.argument,t.argument,i),"IfStatement"==e.type&&(this.diff_nodes(e.test,t.test,i),this.diff_nodes(e.consequent,t.consequent,i),this.diff_nodes(e.alternate,t.alternate,i)),"Super"==e.type&&this.diff_nodes(e.test,t.test,i),"SwitchStatement"==e.type&&(this.diff_nodes(e.discriminant,t.discriminant,i),this.diff_nodes(e.cases,t.cases,i,"cases")),"SwitchCase"==e.type&&(this.diff_nodes(e.test,t.test,i),this.diff_nodes(e.consequent,t.consequent,i)),"ForOfStatement"==e.type&&(this.diff_nodes(e.left,t.left,i),this.diff_nodes(e.right,t.right,i),this.diff_nodes(e.body,t.body,i,"body")),"ForInStatement"==e.type&&(this.diff_nodes(e.left,t.left,i),this.diff_nodes(e.right,t.right,i),this.diff_nodes(e.body,t.body,i,"body")),"ForStatement"==e.type&&(this.diff_nodes(e.init,t.init,i),this.diff_nodes(e.test,t.test,i),this.diff_nodes(e.update,t.update,i),this.diff_nodes(e.body,t.body,i,"body")),"WhileStatement"==e.type&&(this.diff_nodes(e.test,t.test,i),this.diff_nodes(e.body,t.body,i,"body")),"DoWhileStatement"==e.type&&(this.diff_nodes(e.test,t.test,i),this.diff_nodes(e.body,t.body,i,"body")),"BinaryExpression"==e.type){if(e.operator!=t.operator)return i.failed=!0,!0;this.diff_nodes(e.left,t.left,i),this.diff_nodes(e.right,t.right,i)}if("VariableDeclarator"==e.type){if(e.kind!=t.kind)return i.failed=!0,!0;this.diff_nodes(e.id,t.id,i),this.diff_nodes(e.init,t.init,i)}if("ExpressionStatement"==e.type&&this.diff_nodes(e.expression,t.expression,i),"AssignmentExpression"==e.type){if(e.operator!=t.operator)return i.failed=!0,!0;this.diff_nodes(e.left,t.left,i),this.diff_nodes(e.right,t.right,i)}}catch(h){i.failed=!0}},e.__traitInit&&!e.hasOwnProperty("__traitInit")&&(e.__traitInit=e.__traitInit.slice()),e.__traitInit||(e.__traitInit=[]),e.__traitInit.push(function(e){this._structures=[],this._tabChar="  ",this._codeStr="",this._currentLine="",this._indent=0,this._options=e||{}}),e.match=function(e,t,i,s){var n=i;if(e.trim())var r=e.trim().split(",").map(function(e){return e.trim()});else var r=[];this.v_list=r;var o=esprima.parse(t);"Program"==o.type&&(o=o.body.shift()),"ExpressionStatement"==o.type&&(o=o.expression);var f=ASTWalker(),a=this;f.on("node",function(e){var t=e.node,i={slots:{}};if(a.diff_nodes(t,o,i),!i.failed){var n=0;r.forEach(function(e){i.slots[e]&&n++}),console.log(n,r.length),n==r.length&&s({node:e.node,ctx:e.ctx,found:i.slots})}}),f.startWalk(n,{functions:{},vars:{}})},e.refactor=function(e,t,i,s){var n=s,r=e.split(",").map(function(e){return e.trim()});this.v_list=r;var o=esprima.parse(t),f=esprima.parse(i);"Program"==o.type&&(o=o.body.shift()),"Program"==f.type&&(f=f.body.shift()),"ExpressionStatement"==o.type&&(o=o.expression);var a=ASTWalker(),d=this;a.on("node",function(e){var t=e.node,s={slots:{}};if(d.diff_nodes(t,o,s),!s.failed){var n=!0;if(r.forEach(function(e){s.slots[e]||(n=!1)}),n){var f=ASTWalker(),a=esprima.parse(i);"Program"==a.type&&(a=a.body.shift()),"ExpressionStatement"==a.type&&(a=a.expression),f.on("Literal",function(e){var t=e.node,i=t.value,n=s.slots[i];if(n&&"...rest"==i&&n.srcArray){var r=n.tplNodeIndex,o=f.getParent(t);"ExpressionStatement"==o.type&&(t=o,o=f.getParent(o));var a=n.array_name||"body";if(o[a]){for(var d=o[a].indexOf(t),p=n.srcArray.length-r,l=d;p>0;p--,l++)o[a][l]=n.srcArray[r++];return}}}),f.on("Identifier",function(e){var t=e.node,i=t.name,n=s.slots[i];n&&Object.keys(n).forEach(function(e){t[e]=n[e]})}),f.startWalk(a,{functions:{},vars:{}}),Object.keys(a).forEach(function(e){t[e]=a[e]})}}}),a.startWalk(n,{functions:{},vars:{}});var p=ASTWalker();return p.startWalk(n,{functions:{},vars:{}}),{code:p.getCode(),ast:n}}}(this)},i=function(e,t,s,n,r,o,f,a){var d,p=this;if(!(p instanceof i))return new i(e,t,s,n,r,o,f,a);var l=[e,t,s,n,r,o,f,a];if(p.__factoryClass)if(p.__factoryClass.forEach(function(e){d=e.apply(p,l)}),"function"==typeof d){if(d._classInfo.name!=i._classInfo.name)return new d(e,t,s,n,r,o,f,a)}else if(d)return d;p.__traitInit?p.__traitInit.forEach(function(e){e.apply(p,l)}):"function"==typeof p.init&&p.init.apply(p,l)};i._classInfo={name:"ASTRefactor"},i.prototype=new t,function(){"undefined"!=typeof define&&null!==define&&null!=define.amd?(e.ASTRefactor=i,this.ASTRefactor=i):"undefined"!=typeof module&&null!==module&&null!=module.exports?module.exports.ASTRefactor=i:this.ASTRefactor=i}.call(new Function("return this")()),"undefined"!=typeof define&&null!==define&&null!=define.amd&&define(e)}).call(new Function("return this")());