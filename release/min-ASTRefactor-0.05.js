(function(){var e={},t=function(){!function(e){e.on=function(e,t){return this._ev||(this._ev={}),this._ev[e]||(this._ev[e]=[]),this._ev[e].push(t),this},e.removeListener=function(e,t){if(this._ev&&this._ev[e])for(var i=this._ev[e],n=0;n<i.length;n++)if(i[n]==t)return void i.splice(n,1)},e.trigger=function(e,t,i){if(this._ev&&this._ev[e]){return this._ev[e].forEach(function(e){e(t,i)}),this}}}(this),function(e){e.diff_nodes=function(e,t,i){try{if(i.failed)return!0;if(!e&&!t)return;if(e&&!t||!e&&t)return i.failed=!0,!0;var n=this.v_list;if(e instanceof Array&&t instanceof Array){for(var s,r=-1,f=0;f<t.length;f++){var o=t[f];if("ExpressionStatement"==o.type&&(o=o.expression),o&&"Literal"==o.type&&"...rest"==o.value){r=f,s=o;break}}var d=e.length;if(r>=0&&r>=d)return i.failed=!0,!0;for(var f=0;d>f;f++){var o=e[f],a=t[f],p=a;if(!p)return i.failed=!0,!0;if("ExpressionStatement"==p.type&&(p=p.expression),p&&"Literal"==p.type&&"...rest"==p.value){i.slots["...rest"]={srcArray:e,tplArray:t,tplNodeIndex:r,tplNode:s};break}this.diff_nodes(o,a,i)}return}if("Identifier"==t.type&&t.name&&t.name&&n.indexOf(t.name)>=0)return void("codeBlock"==t.name||(i.slots[t.name]=e));if(e.type!=t.type)return i.failed=!0,!0;if("Literal"==e.type&&e.value!=t.value)return i.failed=!0,!0;if("Identifier"==e.type&&e.name!=t.name)return i.failed=!0,!0;if("MemberExpression"==e.type){if(e.computed!=t.computed)return i.failed=!0,!0;this.diff_nodes(e.property,t.property,i),this.diff_nodes(e.object,t.object,i)}if("FunctionDeclaration"==e.type){if(e.generator!=t.generator)return i.failed=!0,!0;this.diff_nodes(e.params,t.params,i),this.diff_nodes(e.body,t.body,i),this.diff_nodes(e.id,t.id,i)}if("ArrowFunctionExpression"==e.type){if(e.generator!=t.generator)return i.failed=!0,!0;this.diff_nodes(e.params,t.params,i),this.diff_nodes(e.body,t.body,i),this.diff_nodes(e.id,t.id,i)}if("FunctionExpression"==e.type){if(e.generator!=t.generator)return i.failed=!0,!0;this.diff_nodes(e.params,t.params,i),this.diff_nodes(e.body,t.body,i),this.diff_nodes(e.id,t.id,i)}if("TryStatement"==e.type&&(this.diff_nodes(e.block,t.block,i),this.diff_nodes(e.handler,t.handler,i),this.diff_nodes(e.finalizer,t.finalizer,i)),"CallExpression"==e.type&&(this.diff_nodes(e.callee,t.callee,i),this.diff_nodes(e.arguments,t.arguments,i)),"SequenceExpression"==e.type&&this.diff_nodes(e.expressions,t.expressions,i),"BlockStatement"==e.type&&this.diff_nodes(e.body,t.body,i),"VariableDeclaration"==e.type&&this.diff_nodes(e.declarations,t.declarations,i),"YieldExpression"==e.type&&this.diff_nodes(e.argument,t.argument,i),"ReturnStatement"==e.type&&this.diff_nodes(e.argument,t.argument,i),"BreakStatement"==e.type&&this.diff_nodes(e.label,t.label,i),"MethodDefinition"==e.type&&(this.diff_nodes(e.key,t.key,i),this.diff_nodes(e.value,t.value,i)),"ClassDeclaration"==e.type&&(this.diff_nodes(e.id,t.id,i),this.diff_nodes(e.superClass,t.superClass,i),this.diff_nodes(e.body,t.body,i)),"ClassBody"==e.type&&this.diff_nodes(e.body,t.body,i),"CatchClause"==e.type&&(this.diff_nodes(e.param,t.param,i),this.diff_nodes(e.body,t.body,i)),"NewExpression"==e.type&&(this.diff_nodes(e.callee,t.callee,i),this.diff_nodes(e.arguments,t.arguments,i)),"ConditionalExpression"==e.type&&(this.diff_nodes(e.test,t.test,i),this.diff_nodes(e.consequent,t.consequent,i),this.diff_nodes(e.alternate,t.alternate,i)),"DebuggerStatement"==e.type,"ThrowStatement"==e.type&&this.diff_nodes(e.argument,t.argument,i),"BlockStatement"==e.type&&this.diff_nodes(e.body,t.body,i),"LabeledStatement"==e.type&&(this.diff_nodes(e.label,t.label,i),this.diff_nodes(e.body,t.body,i)),"LogicalExpression"==e.type){if(e.operator!=t.operator)return i.failed=!0,!0;this.diff_nodes(e.left,t.left,i),this.diff_nodes(e.right,t.right,i)}if("UnaryExpression"==e.type){if(e.operator!=t.operator)return i.failed=!0,!0;this.diff_nodes(e.argument,t.argument,i)}if("Program"==e.type&&this.diff_nodes(e.body,t.body,i),"UpdateExpression"==e.type){if(e.operator!=t.operator)return i.failed=!0,!0;this.diff_nodes(e.argument,t.argument,i)}if("Property"==e.type){if(e.shorthand!=t.shorthand)return i.failed=!0,!0;this.diff_nodes(e.key,t.key,i),this.diff_nodes(e.value,t.value,i)}if("ArrayPattern"==e.type&&this.diff_nodes(e.elements,t.elements,i),"ArrayExpression"==e.type&&this.diff_nodes(e.elements,t.elements,i),"ObjectPattern"==e.type&&this.diff_nodes(e.properties,t.properties,i),"ObjectExpression"==e.type&&this.diff_nodes(e.properties,t.properties,i),"RestElement"==e.type&&this.diff_nodes(e.argument,t.argument,i),"IfStatement"==e.type&&(this.diff_nodes(e.test,t.test,i),this.diff_nodes(e.consequent,t.consequent,i),this.diff_nodes(e.alternate,t.alternate,i)),"Super"==e.type&&this.diff_nodes(e.test,t.test,i),"SwitchStatement"==e.type&&(this.diff_nodes(e.discriminant,t.discriminant,i),this.diff_nodes(e.cases,t.cases,i)),"SwitchCase"==e.type&&(this.diff_nodes(e.test,t.test,i),this.diff_nodes(e.consequent,t.consequent,i)),"ForOfStatement"==e.type&&(this.diff_nodes(e.left,t.left,i),this.diff_nodes(e.right,t.right,i),this.diff_nodes(e.body,t.body,i)),"ForInStatement"==e.type&&(this.diff_nodes(e.left,t.left,i),this.diff_nodes(e.right,t.right,i),this.diff_nodes(e.body,t.body,i)),"ForStatement"==e.type&&(this.diff_nodes(e.init,t.init,i),this.diff_nodes(e.test,t.test,i),this.diff_nodes(e.update,t.update,i),this.diff_nodes(e.body,t.body,i)),"WhileStatement"==e.type&&(this.diff_nodes(e.test,t.test,i),this.diff_nodes(e.body,t.body,i)),"DoWhileStatement"==e.type&&(this.diff_nodes(e.test,t.test,i),this.diff_nodes(e.body,t.body,i)),"BinaryExpression"==e.type){if(e.operator!=t.operator)return i.failed=!0,!0;this.diff_nodes(e.left,t.left,i),this.diff_nodes(e.right,t.right,i)}if("VariableDeclarator"==e.type){if(e.kind!=t.kind)return i.failed=!0,!0;this.diff_nodes(e.id,t.id,i),this.diff_nodes(e.init,t.init,i)}if("ExpressionStatement"==e.type&&this.diff_nodes(e.expression,t.expression,i),"AssignmentExpression"==e.type){if(e.operator!=t.operator)return i.failed=!0,!0;this.diff_nodes(e.left,t.left,i),this.diff_nodes(e.right,t.right,i)}}catch(l){i.failed=!0}},e.__traitInit&&!e.hasOwnProperty("__traitInit")&&(e.__traitInit=e.__traitInit.slice()),e.__traitInit||(e.__traitInit=[]),e.__traitInit.push(function(e){this._structures=[],this._tabChar="  ",this._codeStr="",this._currentLine="",this._indent=0,this._options=e||{}}),e.refactor=function(e,t,i,n){var s=n,r=e.split(",").map(function(e){return e.trim()});this.v_list=r;var f=esprima.parse(t),o=esprima.parse(i);"Program"==f.type&&(f=f.body.shift()),"Program"==o.type&&(o=o.body.shift()),"ExpressionStatement"==f.type&&(f=f.expression);var d=ASTWalker(),a=this;d.on("node",function(e){var t=e.node,n={slots:{}};if(a.diff_nodes(t,f,n),!n.failed){var s=!0;if(r.forEach(function(e){n.slots[e]||(s=!1)}),s){var o=ASTWalker(),d=esprima.parse(i);"Program"==d.type&&(d=d.body.shift()),"ExpressionStatement"==d.type&&(d=d.expression),o.on("Literal",function(e){var t=e.node,i=t.value,s=n.slots[i];if(s&&"...rest"==i&&s.srcArray){var r=s.tplNodeIndex,f=o.getParent(t);if("ExpressionStatement"==f.type&&(f=o.getParent(f)),f.body){for(var d=f.body.indexOf(t),a=s.srcArray.length-r,p=d;a>0;a--,p++)f.body[p]=s.srcArray[r++];return}}}),o.on("Identifier",function(e){var t=e.node,i=t.name,s=n.slots[i];s&&Object.keys(s).forEach(function(e){t[e]=s[e]})}),o.startWalk(d,{functions:{},vars:{}}),Object.keys(d).forEach(function(e){t[e]=d[e]})}}}),d.startWalk(s,{functions:{},vars:{}});var p=ASTWalker();return p.startWalk(s,{functions:{},vars:{}}),{code:p.getCode(),ast:s}}}(this)},i=function(e,t,n,s,r,f,o,d){var a,p=this;if(!(p instanceof i))return new i(e,t,n,s,r,f,o,d);var l=[e,t,n,s,r,f,o,d];if(p.__factoryClass)if(p.__factoryClass.forEach(function(e){a=e.apply(p,l)}),"function"==typeof a){if(a._classInfo.name!=i._classInfo.name)return new a(e,t,n,s,r,f,o,d)}else if(a)return a;p.__traitInit?p.__traitInit.forEach(function(e){e.apply(p,l)}):"function"==typeof p.init&&p.init.apply(p,l)};i._classInfo={name:"ASTRefactor"},i.prototype=new t,function(){"undefined"!=typeof define&&null!==define&&null!=define.amd?(e.ASTRefactor=i,this.ASTRefactor=i):"undefined"!=typeof module&&null!==module&&null!=module.exports?module.exports.ASTRefactor=i:this.ASTRefactor=i}.call(new Function("return this")()),"undefined"!=typeof define&&null!==define&&null!=define.amd&&define(e)}).call(new Function("return this")());